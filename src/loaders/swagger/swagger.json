{
  "openapi": "3.0.0",
  "info": {
    "title": "REST API Template",
    "description": "Template to build REST APIs with Node, Express and Mongo.",
    "version": "1.1.0",
    "contact": {
      "email": "villanuevajoaquin94@gmail.com"
    }
  },

  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "Development"
    },
    {
      "url": "https://plantilla-api-rest.herokuapp.com/docs/",
      "description": "Productionn"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Basic CRUD operations of the users"
    }
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": ["users"],
        "summary": "Get a list of all existing users.",
        "description": "",
        "responses": {
          "200": {
            "description": "The array of users in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create a new user.",
        "description": "",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get an existing user by its ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user's ID that wants to be fetched.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update an existing user by its ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user's ID that wants to be updated.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete an existing user by its ID.",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user's ID that wants to be deleted.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["login"],
        "summary": "Login with an existing user",
        "description": "",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was logged in."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "id",
          "name",
          "lastName",
          "email",
          "password",
          "role",
          "enable"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "The user's ID. It is automatically generated by Mongo.",
            "type": "integer",
            "example": "ase123loj3kl6"
          },
          "name": {
            "description": "The user's name.",
            "type": "string",
            "example": "Joaqu√≠n"
          },
          "lastName": {
            "description": "The user's lastname.",
            "type": "string",
            "example": "Villanueva"
          },
          "email": {
            "description": "The user's e-mail.",
            "type": "string",
            "example": "joaquin@mail.com"
          },
          "password": {
            "description": "The user's password.",
            "type": "string",
            "example": "123456"
          },
          "birthDate": {
            "description": "The user's birth date.",
            "type": "date",
            "example": "03-31-1994"
          },
          "role": {
            "description": "The user's role.",
            "type": "string",
            "example": "USER_ROLE",
            "default": "USER_ROLE",
            "enum": ["ADMIN_ROLE", "USER_ROLE"]
          },
          "enable": {
            "description": "Verify if the user has the right permissions to perform a certain action. The permissions granted depend on the user's role.",
            "type": "Boolean",
            "default": true
          }
        }
      },
      "Login": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "description": "The user's e-mail.",
            "type": "string",
            "example": "joaquin@mail.com"
          },
          "password": {
            "description": "The user's password.",
            "type": "string",
            "example": "123456"
          }
        }
      }
    }
  }
}
